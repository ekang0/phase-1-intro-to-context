function createEmployeeRecord(array) {
  let testEmployee = {
    firstName: array[0],
    familyName: array[1],
    title: array[2],
    payPerHour: array[3],
    timeInEvents: [],
    timeOutEvents: []
  }
  return testEmployee
};

function createEmployeeRecords(arrayofArrays){
  let employeeRecords = arrayofArrays.map(array => createEmployeeRecord(array));
  return employeeRecords
};

function createTimeInEvent(recordObj, dateStamp) {
  let timeIn = {
    type: "TimeIn", 
    hour: parseInt(dateStamp.split(' ')[1]),
    date: dateStamp.split(' ')[0]
  };
  recordObj.timeInEvents.push(timeIn);
  return recordObj;
};

function createTimeOutEvent(recordObj, dateStamp){
  /*let timeOut = {
    type: "TimeOut",
    hour: dateStamp.split(' ')[1],
    date: dateStamp.split(' ')[0]
  }
  recordObj.timeOutEvents.push(timeOut)
  */
  recordObj.timeOutEvents.push({
    type: "TimeOut",
    hour: parseInt(dateStamp.split(' ')[1]),
    date: dateStamp.split(' ')[0]
  });
  return recordObj;
};

let bpRecord = createEmployeeRecord(["Byron", "Poodle", "Mascot", 3]);
let updatedBpRecordIn = createTimeInEvent(bpRecord, "2014-02-28 1400");
let updatedBpRecordOut = createTimeOutEvent(bpRecord, "2014-02-28 1700");
//console.log(bpRecord);
//console.log(updatedBpRecordIn);
//console.log(updatedBpRecordOut);
//console.log(bpRecord);


function hoursWorkedOnDate(recordObj, date){
  let dateIndexIn = recordObj.timeInEvents.findIndex(timeInElement => timeInElement.date === date);
        //console.log(dateIndex);
  let dateIndexOut = recordObj.timeOutEvents.findIndex(timeOutElement => timeOutElement.date === date);
       //console.log(dateIndexOut);
  let timeIn = recordObj.timeInEvents[dateIndexIn].hour;
        console.log(`${timeIn} is the time in`);
        console.log(typeof timeIn);
  let timeOut = recordObj.timeOutEvents[dateIndexOut].hour;
        console.log(`${timeOut} is the time out`);
        console.log(typeof timeOut);

  let hoursWorkedInt = timeOut - timeIn;
    console.log(hoursWorkedInt);
    console.log(typeof hoursWorkedInt);

/*
  let hoursWorkedInt = parseInt(timeOut - timeIn);
  return hoursWorkedInt*/
}; 


hoursWorkedOnDate(bpRecord, '2014-02-28');